version: '{build}'

image:
  - macos
  - Visual Studio 2015
  - Ubuntu2004

configuration: Release

platform:
  - x64

environment:
  matrix:
    - JPY_PYTHON_HOME_WINDOWS: C:\Python34-x64
      JPY_PYTHON_HOME_UBUNTU: /home/appveyor/venv3.4
      JPY_PYTHON_HOME_MAC: /Users/appveyor/.pyenv/versions/3.8.5
    - JPY_PYTHON_HOME_WINDOWS: C:\Python38-x64
      JPY_PYTHON_HOME_UBUNTU: /home/appveyor/venv3.8
      JPY_PYTHON_HOME_MAC: /Users/appveyor/.pyenv/versions/3.8.5

for:
-
  matrix:
    only:
      - image: Visual Studio 2015
  environment:
    JDK8_X64: C:\Program Files\Java\jdk1.8.0
    JPY_JDK_HOME: '%JDK8_X64%'

  install:
    - set JDK_HOME=%JPY_JDK_HOME%
    # JAVA_HOME is used by Maven
    - set JAVA_HOME=%JPY_JDK_HOME%
    - set
    - call "%JPY_JDK_HOME%\bin\java.exe" -XshowSettings:properties -version
    - call "%JPY_PYTHON_HOME_WINDOWS%\Scripts\pip.exe" install --upgrade setuptools
    - call "%JPY_PYTHON_HOME_WINDOWS%\Scripts\pip.exe" install wheel
    - call "%JPY_PYTHON_HOME_WINDOWS%\Scripts\pip.exe" install psutil
    - call "%JPY_PYTHON_HOME_WINDOWS%\python.exe" ci\appveyor\dump-dlls.py
  build_script:
    - set PATH=%JPY_PYTHON_HOME_WINDOWS%;%JPY_PYTHON_HOME_WINDOWS%\DLLs;%JPY_JDK_HOME%;%JPY_JDK_HOME%\bin;%PATH%
    - call "%JPY_PYTHON_HOME_WINDOWS%\python.exe" setup.py maven bdist_wheel
    - move dist win
  artifacts:
    - path: 'win\*.whl'
      name: wheel
  cache:
    # see https://www.appveyor.com/docs/build-cache/
    - '%MAVEN_HOME% -> pom.xml'
    - '%UserProfile%\.m2 -> pom.xml'
-
  matrix:
    only:
      - image: Ubuntu2004
  environment:
      JDK8_X64: /usr/lib/jvm/java-1.8.0-openjdk-amd64
      JPY_JDK_HOME: $JDK8_X64
  install:
    - set JDK_HOME=$JPY_JDK_HOME
    # JAVA_HOME is used by Maven
    - set JAVA_HOME=$JPY_JDK_HOME
    - $JPY_JDK_HOME/bin/java -XshowSettings:properties -version
  build_script:
    - set PATH=$JPY_PYTHON_HOME_UBUNTU/bin:$JPY_JDK_HOME/bin:$PATH
    - $JPY_PYTHON_HOME_UBUNTU/bin/python setup.py maven bdist_wheel
    - mv dist linux
  artifacts:
    - path: 'linux/*.whl'
      name: wheel
-
  matrix:
    only:
      - image: macos
  environment:
    JDK8_X64: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/
    JPY_JDK_HOME: $JDK8_X64
    MACOSX_DEPLOYMENT_TARGET: 10.9
  install:
    - set JDK_HOME=$JPY_JDK_HOME
    # JAVA_HOME is used by Maven
    - set JAVA_HOME=$JPY_JDK_HOME
    # In contrast to Ubuntu and Windows, the AppVeyor macOS image does not have Maven preinstalled.
    - brew install maven
    - $JPY_JDK_HOME/bin/java -XshowSettings:properties -version
    - brew update
    - brew install pyenv
    - pyenv install 3.8.5
    - pyenv global 3.8.5
    - pip3 install wheel
    - set JPY_PYTHON_HOME_MAC=/Users/appveyor/.pyenv/versions/3.8.5
    - ls $JPY_PYTHON_HOME_MAC
  build_script:
    - set PATH=$JPY_PYTHON_HOME_MAC/bin:$JPY_JDK_HOME/bin:$PATH
    - $JPY_PYTHON_HOME_MAC/bin/python setup.py maven bdist_wheel
    - mv dist osx
  artifacts:
    # Apple call their OS "macOS" these days, but this name has to match the directory name on
    # the FTP server.
    - path: 'osx/*.whl'
      name: wheel

deploy:
  - provider: FTP
    protocol: ftp
    host: ftp.brockmann-consult.de
    username: jpy
    password:
      # See https://www.appveyor.com/docs/build-configuration/#secure-variables
      secure: AMte8IErI/LRGmLGq4Y5YQ==
    folder: software
    debug: true
