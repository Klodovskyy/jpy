version: '{build}'

image:
  - Visual Studio 2019
  - Ubuntu2004

configuration: Release

platform:
  - x64

for:
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    JDK8_X64: C:\Program Files\Java\jdk1.8.0
    JPY_PYTHON_HOME: C:\Python38-x64
    JPY_JDK_HOME: '%JDK8_X64%'
  install:
    # The two commented-out commands below were present in the old Windows-only configuration. They don't
    # appear to be available on Windows Server 2019, neither do they appear to be necessary.
    # - call "C:\Program Files\Microsoft SDKs\Windows\v8.1\Bin\SetEnv.cmd" /%PLATFORM%
    # - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
    - set JDK_HOME=%JPY_JDK_HOME%
    # JAVA_HOME is used by Maven
    - set JAVA_HOME=%JPY_JDK_HOME%
    - set
    - call "%JPY_JDK_HOME%\bin\java.exe" -XshowSettings:properties -version
    - call "%JPY_PYTHON_HOME%\Scripts\pip.exe" install wheel
    - call "%JPY_PYTHON_HOME%\Scripts\pip.exe" install psutil
    - call "%JPY_PYTHON_HOME%\python.exe" ci\appveyor\dump-dlls.py
  build_script:
    - set PATH=%JPY_PYTHON_HOME%;%JPY_PYTHON_HOME%\DLLs;%JPY_JDK_HOME%;%JPY_JDK_HOME%\bin;%PATH%
    - call "%JPY_PYTHON_HOME%\python.exe" setup.py maven bdist_wheel
    - move dist win
  artifacts:
    - path: 'win\*.whl'
      name: wheel
-
  matrix:
    only:
      - image: Ubuntu2004
  environment:
      JDK8_X64: /usr/lib/jvm/java-1.8.0-openjdk-amd64
      JPY_PYTHON_HOME: /home/appveyor/venv3.8
      JPY_JDK_HOME: $JDK8_X64
  install:
    - set JDK_HOME=$JPY_JDK_HOME
    # JAVA_HOME is used by Maven
    - set JAVA_HOME=$JPY_JDK_HOME
    - $JPY_JDK_HOME/bin/java -XshowSettings:properties -version
    - $JPY_PYTHON_HOME/bin/pip install wheel
    - $JPY_PYTHON_HOME/bin/pip install psutil
  build_script:
    - set PATH=$JPY_PYTHON_HOME/bin:$JPY_JDK_HOME/bin:$PATH
    - $JPY_PYTHON_HOME/python setup.py maven bdist_wheel
    - mv dist linux
  artifacts:
    - path: 'linux/*.whl'
      name: wheel

# see https://www.appveyor.com/docs/build-cache/
cache:
  - '%MAVEN_HOME% -> pom.xml'
  - '%UserProfile%\.m2 -> pom.xml'

deploy:
  - provider: FTP
    protocol: ftp
    host: ftp.brockmann-consult.de
    username: jpy
    password:
      secure: AMte8IErI/LRGmLGq4Y5YQ==
    folder: software
    debug: true
